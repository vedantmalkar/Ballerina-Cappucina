[1/9] Performing build step for 'bootloader'
[1/1] cd /home/bhakti/Wall-E/5_PWM/build/bootloader/esp-idf/esptool_py && /home/bhakti/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/bhakti/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/bhakti/Wall-E/5_PWM/build/bootloader/bootloader.bin
Bootloader binary size 0x68c0 bytes. 0x740 bytes (6%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/pwm_test.c.obj
In file included from /home/bhakti/Wall-E/components/sra-board-component/include/servo.h:30,
                 from /home/bhakti/Wall-E/components/sra-board-component/include/sra_board.h:35,
                 from /home/bhakti/Wall-E/5_PWM/main/pwm_test.c:4:
/home/bhakti/esp/esp-idf/components/driver/deprecated/driver/mcpwm.h:15:2: warning: #warning "legacy MCPWM driver is deprecated, please migrate to the new driver (include driver/mcpwm_prelude.h)" [-Wcpp]
   15 | #warning "legacy MCPWM driver is deprecated, please migrate to the new driver (include driver/mcpwm_prelude.h)"
      |  ^~~~~~~
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable pwm_test.elf
[6/7] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/bhakti/Wall-E/5_PWM/build/pwm_test.bin
[7/7] cd /home/bhakti/Wall-E/5_PWM/build/esp-idf/esptool_py && /home/bhakti/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/bhakti/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/bhakti/Wall-E/5_PWM/build/partition_table/partition-table.bin /home/bhakti/Wall-E/5_PWM/build/pwm_test.bin
pwm_test.bin binary size 0x31580 bytes. Smallest app partition is 0x100000 bytes. 0xcea80 bytes (81%) free.
